@model MyLibraryNew.Models.Book

@{
    ViewBag.Title = "Create";
}
<div>
    <h1 class="text_color">Add a Book</h1>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="container_create">
            <hr />
            <form class="form-horizontal">
                <div class="text_color margin_bottom">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "text-center text-white control-label col-sm-2" })
                    <div class="col-md-10 margin_bottom">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } }) <!-- input -->
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="text_color form-group">
                    @Html.LabelFor(model => model.TotalPages, htmlAttributes: new { @class = "text-center control-label col-sm-2" })
                    <div class="col-md-10 margin_bottom">
                        @Html.EditorFor(model => model.TotalPages, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TotalPages, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="text_color form-group">
                    @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "text-center control-label col-sm-2" })
                    <div class="col-md-10 margin_bottom">
                        @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="text_color form-group">
                    @Html.LabelFor(model => model.Progress, htmlAttributes: new { @class = "text-center control-label col-sm-2" })
                    <div class="col-md-10 margin_bottom">
                        @Html.EditorFor(model => model.Progress, new { htmlAttributes = new {disabled = "disabled", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Progress, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-12" style="margin-top: 1em">
                        <button type="submit" value="Create">Create</button>
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "backtoindex" })
                    </div>
                </div>
            </form>
        </div>
    }

</div>
<script>
    $("#TotalPages").keyup(function () {
        if ($("#TotalPages").val() != "")
            $("#Progress").prop("disabled", false)
        else $("#Progress").prop("disabled", true).val("")
    });
    $("#Progress").keydown(function (e) {
        var totalPages = $("#TotalPages").val()
        var progress = $(this).val();
        keyPressed = e.originalEvent.key;
        debugger;
        var newProgress = progress + keyPressed
        if (parseInt(newProgress) <= parseInt(totalPages)) 
            $("#Progress").val(newProgress)
        else 
            $("#Progress").val(totalPages)
        return false;
    });
</script>

